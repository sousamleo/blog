# üëã Visit our GitHub organization at https://github.com/redhat-actions/ to see our actions and provide feedback.

name: OpenShift

env:
  # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_USERNAME: ${{ secrets.OPENSHIFT_USERNAME }}
  OPENSHIFT_PASSWORD: ${{ secrets.OPENSHIFT_PASSWORD }}
  
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: "fiap-grupo19"

  # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
  APP_NAME: "blog"

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ master ]

jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift
    # ubuntu-20.04 can also be used.
    runs-on: ubuntu-18.04
    environment: production

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
    - name: Check for required secrets
      uses: actions/github-script@v4
      with:
        script: |
          const secrets = {
            OPENSHIFT_SERVER: `${{ secrets.OPENSHIFT_SERVER }}`,
            OPENSHIFT_PASSWORD: `${{ secrets.OPENSHIFT_PASSWORD }}`,
            OPENSHIFT_USERNAME: `${{ secrets.OPENSHIFT_USERNAME }}`
          };

          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.error(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`‚úîÔ∏è Secret "${name}" is set`);
            return false;
          });

          if (missingSecrets.length > 0) {
            core.setFailed(`‚ùå At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`‚úÖ All the required secrets are set`);
          }

    - name: Check out repository
      uses: actions/checkout@v2

    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_username: ${{ env.OPENSHIFT_USERNAME }}
        openshift_password: ${{ env.OPENSHIFT_PASSWORD }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Delete application¬¥s resources and configurations
      run: |
        oc delete all --selector app=${{ env.APP_NAME }}
        oc delete imagestream ${{ env.APP_NAME }}
        oc delete HorizontalPodAutoscaler ${{ env.APP_NAME }}-hpa
        oc delete route ${{ env.APP_NAME }}-route
      continue-on-error: true
      
    - name: Criando Projeto
      run: |
        oc new-project ${{ env.OPENSHIFT_NAMESPACE }}
      continue-on-error: true
    
    - name: Criando Volume Persistente para o Banco de Dados
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/db-persistentVolume.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
      continue-on-error: true
    
    - name: Criando Secret para armazenar informa√ß√µes de usu√°rio/senha/banco
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/db-secret.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
      continue-on-error: true
      
    - name: Deployment do Banco de dados
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/db-deployment.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
      continue-on-error: true
    
    - name: Criando servi√ßo do Banco de dados
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/db-service.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
      continue-on-error: true
      
    - name: Criando reposit√≥rio de Imagem para a aplica√ß√£o
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-imageStream.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
        
    - name: Build da aplica√ß√£o
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-buildConfig.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
        sleep 60
        
    - name: Deploy da aplica√ß√£o no POD e associa√ß√£o com o Banco de dados
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-deployment.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
        
    - name: Criando servi√ßo da aplica√ß√£o
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-service.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
        
    - name: Obtendo o nome do POD da aplica√ß√£o
      id: pod
      run: | 
        #echo "::set-output name=name::$(oc get pods -n fiap-grupo19 --selector deployment=blog -o name)"
        oc get pods -n fiap-grupo19 --selector deployment=blog -o name
    
    - name: Criando usu√°rio e estruturas de Banco de dados
      run: echo "${{ steps.pod.outputs.name}}"
      #run: oc rsh ${{ steps.pod.outputs.pod-name}} .s2i/action_hooks/setup
    
    - name: Criando rota da aplica√ß√£o
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-route.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
        
    - name: Criando configura√ß√£o de autoscaling da aplica√ß√£o
      run: |
        oc create -f https://raw.githubusercontent.com/sousamleonardo/blog/master/deploy/app-hpa.yaml -n ${{ env.OPENSHIFT_NAMESPACE }}
    
    - name: Test project is running
      id: test-project
      uses: nick-invision/retry@v2.2.0
      with:
        timeout_seconds: 3
        retry_wait_seconds: 10
        max_attempts: 10
        warning_on_retry: false
        command: curl -sSfLi ${{ env.APP_NAME }}-route-${{ env.OPENSHIFT_NAMESPACE }}.apps.na46.prod.nextcle.com

    - name: Print application URL
      run: |
        [[ -n ${{ env.APP_NAME }}-route-${{ env.OPENSHIFT_NAMESPACE }}.apps.na46.prod.nextcle.com ]] || (echo "Determining application route failed in previous step"; exit 1)
        echo
        echo "======================== Your application is available at: ========================"
        echo ${{ env.APP_NAME }}-route-${{ env.OPENSHIFT_NAMESPACE }}.apps.na46.prod.nextcle.com
        echo "==================================================================================="
